#!/usr/bin/expect -f

log_user 0

# Name     :    ndc.exp
# Author   :    Steven W. Balch
# Created  :    08/26/04
# Version  :    1.01

set policy [lindex $argv 0]
set ip [lindex $argv 1]
set ACCESS [lindex $argv 2]
set UNAMESTATUS [lindex $argv 3]
set USERNAME [lindex $argv 4]
set PASSWORD [lindex $argv 5]
set EPASSTATUS [lindex $argv 6]
set EPASSWORD [lindex $argv 7]

puts ""
puts "Opening Network Device Policy: $policy"
puts ""

if [catch {set policyrw [open $policy r]} err] {
puts "Could not Open Network Device Policy: $policy"
puts ""
puts "Exiting Application"
exit
                                               }

puts "Accessing Network Device: $ip"
puts ""

if {[regexp {ssh} $ACCESS] == 1} {
puts "ssh = true"
spawn ssh -l $USERNAME $ip
set timeout 10
sleep 2

expect {
       {*Unable to connect*} {exit}
       {*imeout*} {exit}
       {*} {send "$PASSWORD\r"}
       sleep 1
       }
       
if {[regexp {yes} $EPASSTATUS] == 1} {
#puts "EPASSTATUS = true"

send "en\r"
expect {
           {*assword*} {send "$EPASSWORD\r"}
           sleep 1
       }
                                     }

} else {

if {[regexp {telnet} $ACCESS] == 1} {
#puts "telnet = true"
spawn telnet $ip
set timeout 10
sleep 2

if {[regexp {yes} $UNAMESTATUS] == 1} {
#puts "UNAMESTATUS = true"

expect {
       {*Unable to connect*} {exit}
       {*imeout*} {exit}
       {*sername*} {send "$USERNAME\r"}
       sleep 1
       }
expect {
       {*assword*} {send "$PASSWORD\r"}
       sleep 1
       }

} else {


if {[regexp {no} $UNAMESTATUS] == 1} {
#puts "UNAMESTATUS = false"

expect {
        puts $PASSWORD
       {*assword*} {send "$PASSWORD\r"}
       sleep 1

       }
                                     }
       }
                                     }

if {[regexp {yes} $EPASSTATUS] == 1} {
#puts "EPASSTATUS = true"

send "en\r"
expect {
           {*assword*} {send "$EPASSWORD\r"}
           sleep 1
       }

} else {
	
}


       }


sleep 2

puts "Pushing Network Device Policy"
puts ""

set flist ""

while {[gets $policyrw entry] >=0} {
#set content [split $entry \n]
lappend flist $entry

                                   }
close $policyrw

#puts $flist

foreach line $flist {

send "$line\r"
#puts "$line"
sleep 1
                    }


sleep 10

puts "Network Device Policy Change Completed"
puts ""

puts "Closing Application"
puts ""
